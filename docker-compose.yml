version: '3'

services:

  redis:
      image: "bitnami/redis:latest"
      container_name: redis
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
      labels:
        kompose.service.type: nodeport
      ports:
        - "6379:6379"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      volumes:
        - "redis_data:/bitnami/redis"

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:6.4.1
      container_name: elasticsearch
      environment:
        - cluster.name=elasticsearch-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      ports:
        - 9200:9200
        - 9300:9300
      volumes:
        - esdata:/usr/share/elasticsearch/data

  zookeeper:
      container_name: zookeeper
      build:
        context: .
        dockerfile: servers/zookeeper/zookeeper.dockerfile
      ports:
        - "2181:2181"
      environment:
#        JVMFLAGS: "-Djava.security.auth.login.config=/opt/bitnami/zookeeper/jaas.conf"
        ALLOW_ANONYMOUS_LOGIN: "yes"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"

  grafana:
      image: grafana/grafana
      container_name: grafana
      restart: always
      ports:
        - "3000:3000"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - graphite

  graphite:
      image: graphiteapp/graphite-statsd
      container_name: graphite
      restart: always
      ports:
        - 80:80
        - 2003-2004:2003-2004
        - 2023-2024:2023-2024
        - 8125:8125/udp
        - 8126:8126
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"

  kafka:
      build:
        context: .
        dockerfile: servers/kafka/kafka.dockerfile
      container_name: kafka
      ports:
        - "9092"
      environment:
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CREATE_TOPICS: "notificationCommandTopic:1:1,notificationEventTopic:1:1,taskCommandTopic:1:1,taskEventTopic:1:1,collaborationEventTopic:1:1"
        KAFKA_DELETE_TOPIC_ENABLE: "true"
        KAFKA_BROKER_ID: 100
        KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/jaas.conf"
        KAFKA_LISTENERS: "SASL_PLAINTEXT://:9092"
        KAFKA_SECURITY_INTER_BROKER_PROTOCOL: "SASL_PLAINTEXT"
        KAFKA_ADVERTISED_LISTENERS: "SASL_PLAINTEXT://kafka:9092"
        KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.auth.SimpleAclAuthorizer"
        KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
        KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
        KAFKA_SASL_MECHANISMS: PLAIN
        KAFKA_CREATE_ACLS: "yes"
        KAFKA_SUPER_USERS: "User:admin"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      volumes:
        - "kafka_data:/var/run/docker.sock"
      depends_on:
        - zookeeper

  collaboration-transformer-app:
      build:
        context: .
        dockerfile: collaboration-transformer-app/app.dockerfile
      ports:
        - "8081:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - kafka
        - redis

  collaboration-ui-app:
      build:
        context: .
        dockerfile: collaboration-ui-app/app.dockerfile
      ports:
        - "8083:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - collaboration-service-app

  notification-command-consumer-app:
      build:
        context: .
        dockerfile: notification-command-consumer-app/app.dockerfile
      ports:
        - "8084:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - kafka

  notification-indexer-app:
      build:
        context: .
        dockerfile: notification-indexer-app/app.dockerfile
      ports:
        - "8085:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - elasticsearch
        - kafka
        - graphite

  notification-service-app:
      build:
        context: .
        dockerfile: notification-service-app/app.dockerfile
      ports:
        - "8086:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - elasticsearch
        - graphite

  notification-ui-app:
      build:
        context: .
        dockerfile: notification-ui-app/app.dockerfile
      ports:
        - "8087:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - notification-service-app
        - graphite

  task-command-consumer-app:
      build:
        context: .
        dockerfile: task-command-consumer-app/app.dockerfile
      ports:
        - "8088:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - kafka
        - graphite

  task-indexer-app:
      build:
        context: .
        dockerfile: task-indexer-app/app.dockerfile
      ports:
        - "8089:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - elasticsearch
        - kafka
        - graphite

  task-service-app:
      build:
        context: .
        dockerfile: task-service-app/app.dockerfile
      ports:
        - "8090:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - elasticsearch
        - graphite

  task-ui-app:
      build:
        context: .
        dockerfile: task-ui-app/app.dockerfile
      ports:
        - "8091:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - task-service-app
        - graphite

  collaboration-service-app:
      build:
        context: .
        dockerfile: collaboration-service-app/app.dockerfile
      ports:
        - "8092:8080"
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      depends_on:
        - kafka
        - graphite

volumes:
    redis_data:
      driver: local
    esdata:
      driver: local
    kafka_data:
      driver: local
    grafana-volume:
        driver: local